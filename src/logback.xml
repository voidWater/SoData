<?xml version="1.0" encoding="UTF-8" ?>
<!-- scan:实时扫描配置，配置文件改变则重新加载配置文件
	scanPeriod:实时扫面间隔
	debug:是否显示logback内部信息
 -->
<configuration scan="true" scanPeriod="60 seconds" debug="true">
  <property name="APP_Name" value="SoData" /> 
　<!-- 应用名字 -->
  <contextName>${APP_Name}</contextName> 
  <!-- 动态日志级别 -->
  <jmxConfigurator />
  <!-- 获取时间戳字符串，他有两个属性key和datePattern -->
  <timestamp key="bySecond" datePattern="yyyyMMdd'T'HHmmss"/> 
  <!-- 控制台输出日志 -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </layout>
  </appender>
  <!-- 文件输出 -->
  <appender name="FILE" class="ch.qos.logback.core.FileAppender"> 
　　<file>testFile.log</file> 
　　<append>true</append> 
　　<layout> 
　　　　<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern> 
　　</layout> 
　</appender> 
  <!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份)-->
  <appender name="RollingFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>xxxx.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <FileNamePattern>xxxx.log.%i.bak</FileNamePattern>
      <MinIndex>1</MinIndex>
      <MaxIndex>12</MaxIndex>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>100MB</MaxFileSize>
    </triggeringPolicy>
    <layout class="ch.qos.logback.classic.PatternLayout">
      <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern>
    </layout>
  </appender>
  
  <!--这里指定logger name 是为jmx设置日志级别做铺垫 -->
  <!-- logger name用来指定受此loger约束的某一个包或者具体的某一个类。 -->
  <!-- additivity -->
  <logger name="org">
    <level value="debug" />
  
    <appender-ref ref="FILE" />
  </logger>
  <root level="DEBUG"> 
	<appender-ref ref="STDOUT" /> 
　</root> 
</configuration>